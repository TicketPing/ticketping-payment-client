{"ast":null,"code":"var _jsxFileName = \"/Users/hwarye/Documents/coding/sparta/final-project/project/stripe-front/src/CheckoutForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // useNavigate 임포트\nimport axios from \"axios\";\nimport { PaymentElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CheckoutForm({\n  dpmCheckerLink,\n  orderId\n}) {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate(); // useNavigate 훅 사용\n\n  const config = {\n    headers: {\n      \"Access-Control-Allow-Headers\": \"Content-Type\",\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Methods\": \"OPTIONS,POST\" // 필요한 경우 인증 토큰\n    }\n  };\n\n  //서버로 주문 검증 요청을 보내는 함수\n  const verifyOrder = async () => {\n    try {\n      const response = await axios.post(`http://localhost:8080/api/v1/payments/verify-ttl/${orderId}`\n      //, config\n      //(`http://localhost:8080/api/v1/payments/verify-ttl/${orderId}`\n      //      , {\n      // //   method: \"POST\",\n      //  headers: {\n      //    \"Access-Control-Allow-Headers\" : \"Content-Type\",\n      //    \"Content-Type\": \"application/json\",\n      //    \"Access-Control-Allow-Methods\": \"OPTIONS,POST\"\n      //    }\n      //}\n      );\n      console.log(response.status);\n      return true;\n      // .then((res) => {\n      //   console.log(res.status);\n      //   // 응답 상태 코드가 200-299 범위에 있을 때만 처리\n      //   if (res.ok) {\n      //     return res.json(); // 응답 데이터를 JSON으로 파싱\n      //   } else {\n      //     // 상태 코드가 성공적이지 않은 경우 처리\n      //     throw new Error(`서버 응답 오류: ${res.status}`);\n      //   }\n      // })\n    } catch (error) {\n      console.error(\"서버 검증 중 오류 발생:\", error);\n      return false;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // 주문 검증 실행\n    const isValid = await verifyOrder();\n    if (!isValid) {\n      setMessage(\"주문 검증 실패: ttl이 만료되었습니다. 처음부터 다시 시도해주세요.\");\n      setIsLoading(false);\n\n      // 검증 실패 시 5초 후 홈으로 리다이렉트\n      setTimeout(() => {\n        navigate(\"/complete\"); // 상태 전달\n      }, 3000); // 3000ms = 3초\n\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: `${window.location.origin}/complete`\n      }\n    });\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n    setIsLoading(false);\n  };\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dpmCheckerLink && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"payment-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(PaymentElement, {\n          id: \"payment-element\",\n          options: paymentElementOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isLoading || !stripe || !elements || !orderId,\n          id: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"button-text\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\",\n              id: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 26\n            }, this) : \"Pay now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"payment-message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dpm-annotation\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Payment methods are dynamically displayed based on customer location, order amount, and currency.\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: dpmCheckerLink,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            id: \"dpm-integration-checker\",\n            children: \"Preview payment methods by transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(CheckoutForm, \"zHt1jZSlMvubj/PKKMop/IgAVGY=\", false, function () {\n  return [useStripe, useElements, useNavigate];\n});\n_c = CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","PaymentElement","useStripe","useElements","jsxDEV","_jsxDEV","Fragment","_Fragment","CheckoutForm","dpmCheckerLink","orderId","_s","stripe","elements","message","setMessage","isLoading","setIsLoading","navigate","config","headers","verifyOrder","response","post","console","log","status","error","handleSubmit","e","preventDefault","isValid","setTimeout","confirmPayment","confirmParams","return_url","window","location","origin","type","paymentElementOptions","layout","children","id","onSubmit","options","fileName","_jsxFileName","lineNumber","columnNumber","disabled","className","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/hwarye/Documents/coding/sparta/final-project/project/stripe-front/src/CheckoutForm.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // useNavigate 임포트\nimport axios from \"axios\";\n\nimport {\n  PaymentElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\n\nexport default function CheckoutForm({dpmCheckerLink, orderId}) {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const navigate = useNavigate(); // useNavigate 훅 사용\n\n  const config = {\n    headers: {\n      \"Access-Control-Allow-Headers\" : \"Content-Type\",\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Methods\": \"OPTIONS,POST\" // 필요한 경우 인증 토큰\n    }\n  };\n\n  //서버로 주문 검증 요청을 보내는 함수\n  const verifyOrder = async () => {\n    try {\n      const response = await axios.post\n      (`http://localhost:8080/api/v1/payments/verify-ttl/${orderId}`\n          //, config\n      //(`http://localhost:8080/api/v1/payments/verify-ttl/${orderId}`\n      //      , {\n      // //   method: \"POST\",\n      //  headers: {\n      //    \"Access-Control-Allow-Headers\" : \"Content-Type\",\n      //    \"Content-Type\": \"application/json\",\n      //    \"Access-Control-Allow-Methods\": \"OPTIONS,POST\"\n      //    }\n       //}\n      )\n      console.log(response.status);\n      return true;\n      // .then((res) => {\n      //   console.log(res.status);\n      //   // 응답 상태 코드가 200-299 범위에 있을 때만 처리\n      //   if (res.ok) {\n      //     return res.json(); // 응답 데이터를 JSON으로 파싱\n      //   } else {\n      //     // 상태 코드가 성공적이지 않은 경우 처리\n      //     throw new Error(`서버 응답 오류: ${res.status}`);\n      //   }\n      // })\n    } catch (error) {\n      console.error(\"서버 검증 중 오류 발생:\", error);\n      return false;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // 주문 검증 실행\n    const isValid = await verifyOrder();\n    if (!isValid) {\n      setMessage(\"주문 검증 실패: ttl이 만료되었습니다. 처음부터 다시 시도해주세요.\");\n      setIsLoading(false);\n\n      // 검증 실패 시 5초 후 홈으로 리다이렉트\n      setTimeout(() => {\n        navigate(\"/complete\"); // 상태 전달\n      }, 3000); // 3000ms = 3초\n\n      return;\n    }\n\n    setIsLoading(true);\n\n    const { error } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: `${window.location.origin}/complete`,\n      },\n    });\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n\n    setIsLoading(false);\n  };\n\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  }\n\n  return (\n    <>\n      {dpmCheckerLink &&\n          <>\n\n            <form id=\"payment-form\" onSubmit={handleSubmit}>\n              <PaymentElement id=\"payment-element\" options={paymentElementOptions}/>\n              <button disabled={isLoading || !stripe || !elements || !orderId} id=\"submit\">\n          <span id=\"button-text\">\n            {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\n          </span>\n              </button>\n              {/* Show any error or success messages */}\n              {message && <div id=\"payment-message\">{message}</div>}\n            </form>\n            {/* [DEV]: Display dynamic payment methods annotation and integration checker */}\n            <div id=\"dpm-annotation\">\n              <p>\n                Payment methods are dynamically displayed based on customer location, order amount, and currency.&nbsp;\n                <a href={dpmCheckerLink} target=\"_blank\" rel=\"noopener noreferrer\" id=\"dpm-integration-checker\">Preview\n                  payment methods by transaction</a>\n              </p>\n            </div>\n          </>\n      }\n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}