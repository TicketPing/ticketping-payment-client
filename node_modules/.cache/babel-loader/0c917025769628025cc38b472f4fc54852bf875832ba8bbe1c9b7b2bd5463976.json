{"ast":null,"code":"var _jsxFileName = \"/Users/hwarye/Documents/coding/sparta/final-project/project/stripe-front/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, useStripe } from \"@stripe/react-stripe-js\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport CheckoutForm from \"./CheckoutForm\";\nimport CompletePage from \"./CompletePage\";\nimport \"./App.css\";\n\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// This is a public sample test API key.\n// Don’t submit any personally identifiable information in requests made with this key.\n// Sign in to see your own test API key embedded in code samples.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"pk_test_51Q801tRpxgEVE539pBARC3D84A8MPZskWP4cyVuXZZOWGDVFmD2YF7pfZArK7jYymrTSZ4aGE2hlxKe0LLUUaHrI00NC71Qgaz\");\nexport default function App() {\n  _s();\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const [dpmCheckerLink, setDpmCheckerLink] = useState(\"\");\n  const [order, setOrder] = useState(\"\");\n  // const [performanceName, setPerformanceName] = useState(\"\");\n  // const [performanceTime, setPerformanceTime] = useState(\"\");\n  // const [seatInfo, setSeatInfo] = useState(\"\");\n  // const [amount, setAmount] = useState(0);\n  // const [userEmail, setUserEmail] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {}, []);\n  const handleModalSubmit = () => {\n    setIsModalOpen(false);\n  };\n  useEffect(() => {\n    if (order !== \"\" && !isModalOpen) {\n      // Create PaymentIntent as soon as the page loads\n      fetch(`http://localhost:8080/api/v1/payments/${order}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n        // body: JSON.stringify({\n        //   performanceName: performanceName,\n        //   performanceTime: performanceTime,\n        //   seatInfo: seatInfo,\n        //   amount: amount,\n        //   userEmail: userEmail\n        // }),\n      }).then(res => res.json()).then(data => {\n        console.log(data.data);\n        debugger;\n        setClientSecret(data.data.clientSecret);\n        // [DEV] For demo purposes only\n        setDpmCheckerLink(data.data.dpmCheckerLink);\n      });\n    }\n  }, [isModalOpen]);\n  const appearance = {\n    theme: 'stripe'\n  };\n  // Enable the skeleton loader UI for optimal loading.\n  const loader = 'auto';\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC0C1\\uD488 ID \\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC0C1\\uD488 ID\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          onChange: e => setOrder(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleModalSubmit,\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: clientSecret && /*#__PURE__*/_jsxDEV(Elements, {\n        options: {\n          clientSecret,\n          appearance,\n          loader\n        },\n        stripe: stripePromise,\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/checkout\",\n            element: /*#__PURE__*/_jsxDEV(CheckoutForm, {\n              dpmCheckerLink: dpmCheckerLink\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/complete\",\n            element: /*#__PURE__*/_jsxDEV(CompletePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"dTxJOYS/skeXhhE0Hi0eNeUtdGY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","loadStripe","Elements","useStripe","BrowserRouter","Router","Route","Routes","CheckoutForm","CompletePage","jsxDEV","_jsxDEV","stripePromise","App","_s","clientSecret","setClientSecret","dpmCheckerLink","setDpmCheckerLink","order","setOrder","isModalOpen","setIsModalOpen","handleModalSubmit","fetch","method","headers","then","res","json","data","console","log","appearance","theme","loader","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","options","stripe","path","element","_c","$RefreshReg$"],"sources":["/Users/hwarye/Documents/coding/sparta/final-project/project/stripe-front/src/App.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {loadStripe} from \"@stripe/stripe-js\";\nimport {Elements, useStripe} from \"@stripe/react-stripe-js\";\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport CheckoutForm from \"./CheckoutForm\";\nimport CompletePage from \"./CompletePage\";\nimport \"./App.css\";\n\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// This is a public sample test API key.\n// Don’t submit any personally identifiable information in requests made with this key.\n// Sign in to see your own test API key embedded in code samples.\nconst stripePromise = loadStripe(\"pk_test_51Q801tRpxgEVE539pBARC3D84A8MPZskWP4cyVuXZZOWGDVFmD2YF7pfZArK7jYymrTSZ4aGE2hlxKe0LLUUaHrI00NC71Qgaz\");\n\nexport default function App() {\n    const [clientSecret, setClientSecret] = useState(\"\");\n    const [dpmCheckerLink, setDpmCheckerLink] = useState(\"\");\n    const [order, setOrder] = useState(\"\");\n    // const [performanceName, setPerformanceName] = useState(\"\");\n    // const [performanceTime, setPerformanceTime] = useState(\"\");\n    // const [seatInfo, setSeatInfo] = useState(\"\");\n    // const [amount, setAmount] = useState(0);\n    // const [userEmail, setUserEmail] = useState(\"\");\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    useEffect(() => {\n        \n    }, []);\n\n    const handleModalSubmit = () => {\n        setIsModalOpen(false);\n    };\n\n\n    useEffect(() => {\n        if (order !== \"\" && !isModalOpen) {\n            // Create PaymentIntent as soon as the page loads\n            fetch(`http://localhost:8080/api/v1/payments/${order}`, {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\"},\n                // body: JSON.stringify({\n                //   performanceName: performanceName,\n                //   performanceTime: performanceTime,\n                //   seatInfo: seatInfo,\n                //   amount: amount,\n                //   userEmail: userEmail\n                // }),\n            })\n                .then((res) => res.json())\n                .then((data) => {\n                    console.log(data.data)\n                    debugger\n                    setClientSecret(data.data.clientSecret);\n                    // [DEV] For demo purposes only\n                    setDpmCheckerLink(data.data.dpmCheckerLink);\n                });\n        }\n    }, [isModalOpen]);\n\n    const appearance = {\n        theme: 'stripe',\n    };\n    // Enable the skeleton loader UI for optimal loading.\n    const loader = 'auto';\n\n    return (\n        <Router>\n            {isModalOpen && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h2>상품 ID 입력</h2>\n                        <input\n                            type=\"text\"\n                            placeholder=\"상품 ID를 입력하세요\"\n                            onChange={(e) => setOrder(e.target.value)}\n                        />\n                        {/*<input*/}\n                        {/*    type=\"text\"*/}\n                        {/*    placeholder=\"상품 이름을 입력하세요\"*/}\n                        {/*    onChange={(e) => setPerformanceName(e.target.value)}*/}\n                        {/*/>*/}\n                        {/*<input*/}\n                        {/*    type=\"text\"*/}\n                        {/*    placeholder=\"공연 시간을 입력하세요\"*/}\n                        {/*    onChange={(e) => setPerformanceTime(e.target.value)}*/}\n                        {/*/>*/}\n                        {/*<input*/}\n                        {/*    type=\"text\"*/}\n                        {/*    placeholder=\"좌석 정보를 입력하세요\"*/}\n                        {/*    onChange={(e) => setSeatInfo(e.target.value)}*/}\n                        {/*/>*/}\n                        {/*<input*/}\n                        {/*    type=\"number\"*/}\n                        {/*    placeholder=\"결제 금액을 입력하세요\"*/}\n                        {/*    onChange={(e) => setAmount(e.target.value)}*/}\n                        {/*/>*/}\n                        {/*<input*/}\n                        {/*    type=\"email\"*/}\n                        {/*    placeholder=\"이메일을 입력하세요\"*/}\n                        {/*    onChange={(e) => setUserEmail(e.target.value)}*/}\n                        {/*/>*/}\n                        <button onClick={handleModalSubmit}>확인</button>\n                    </div>\n                </div>\n            )}\n            <div className=\"App\">\n                {clientSecret && (\n                    <Elements options={{clientSecret, appearance, loader}} stripe={stripePromise}>\n                        <Routes>\n                            <Route path=\"/checkout\" element={<CheckoutForm dpmCheckerLink={dpmCheckerLink}/>}/>\n                            <Route path=\"/complete\" element={<CompletePage/>}/>\n                        </Routes>\n                    </Elements>\n                )}\n            </div>\n        </Router>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}