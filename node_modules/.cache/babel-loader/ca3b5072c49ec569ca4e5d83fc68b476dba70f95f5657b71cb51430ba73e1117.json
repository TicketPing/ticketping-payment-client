{"ast":null,"code":"var _jsxFileName = \"/Users/hwarye/Documents/coding/sparta/final-project/project/stripe-front/src/CheckoutForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { PaymentElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CheckoutForm({\n  dpmCheckerLink\n}) {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: \"http://localhost:3000/complete\"\n      },\n      redirect: false\n    });\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n    setIsLoading(false);\n  };\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dpmCheckerLink && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"payment-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(PaymentElement, {\n          id: \"payment-element\",\n          options: paymentElementOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isLoading || !stripe || !elements,\n          id: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"button-text\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\",\n              id: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 26\n            }, this) : \"Pay now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"payment-message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dpm-annotation\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Payment methods are dynamically displayed based on customer location, order amount, and currency.\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: dpmCheckerLink,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            id: \"dpm-integration-checker\",\n            children: \"Preview payment methods by transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(CheckoutForm, \"dCp8GD2PngabXglFzb6wYe55PBM=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useState","PaymentElement","useStripe","useElements","jsxDEV","_jsxDEV","Fragment","_Fragment","CheckoutForm","dpmCheckerLink","_s","stripe","elements","message","setMessage","isLoading","setIsLoading","handleSubmit","e","preventDefault","error","confirmPayment","confirmParams","return_url","redirect","type","paymentElementOptions","layout","children","id","onSubmit","options","fileName","_jsxFileName","lineNumber","columnNumber","disabled","className","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/hwarye/Documents/coding/sparta/final-project/project/stripe-front/src/CheckoutForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  PaymentElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\n\nexport default function CheckoutForm({dpmCheckerLink}) {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    setIsLoading(true);\n\n    const { error } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: \"http://localhost:3000/complete\",\n      },\n      redirect: false\n    });\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n\n    setIsLoading(false);\n  };\n\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  }\n\n  return (\n    <>\n      {dpmCheckerLink &&\n          <>\n\n            <form id=\"payment-form\" onSubmit={handleSubmit}>\n              <PaymentElement id=\"payment-element\" options={paymentElementOptions}/>\n              <button disabled={isLoading || !stripe || !elements} id=\"submit\">\n          <span id=\"button-text\">\n            {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\n          </span>\n              </button>\n              {/* Show any error or success messages */}\n              {message && <div id=\"payment-message\">{message}</div>}\n            </form>\n            {/* [DEV]: Display dynamic payment methods annotation and integration checker */}\n            <div id=\"dpm-annotation\">\n              <p>\n                Payment methods are dynamically displayed based on customer location, order amount, and currency.&nbsp;\n                <a href={dpmCheckerLink} target=\"_blank\" rel=\"noopener noreferrer\" id=\"dpm-integration-checker\">Preview\n                  payment methods by transaction</a>\n              </p>\n            </div>\n          </>\n      }\n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}