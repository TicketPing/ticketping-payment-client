{"ast":null,"code":"var _jsxFileName = \"/Users/hwarye/Documents/coding/sparta/final-project/project/stripe-front/src/CheckoutForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // useNavigate 임포트\nimport axios from \"axios\";\nimport { PaymentElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { usePerformance } from \"./PerformanceContext\"; // PerformanceProvider\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CheckoutForm({\n  dpmCheckerLink\n}) {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate(); // useNavigate 훅 사용\n  const {\n    performanceId,\n    orderId\n  } = usePerformance(); // PerformanceContext에서 값 가져오기\n\n  const config = {\n    headers: {\n      \"Access-Control-Allow-Headers\": \"Content-Type\",\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Methods\": \"OPTIONS,POST\" // 필요한 경우 인증 토큰\n    }\n  };\n  //서버로 주문 검증 요청을 보내는 함수\n  const verifyOrder = async () => {\n    try {\n      console.log(\"검증 요청 \" + performanceId);\n      const response = await axios.post\n      //(`http://3.36.73.221:10020/api/v1/payments/verify-ttl/${orderId}`, config\n      //(`http://localhost:8080/api/v1/payments/verify-ttl/${orderId}`\n      (`https://1741-122-203-225-229.ngrok-free.app/api/v1/payments/verify-ttl/${orderId}?performanceId=${performanceId}`);\n      console.log(response.status);\n      return true;\n    } catch (error) {\n      console.error(\"서버 검증 중 오류 발생:\", error);\n      return false;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    // 주문 검증 실행\n    const isValid = await verifyOrder();\n    if (!isValid) {\n      setMessage(\"주문 검증 실패: ttl이 만료되었습니다. 처음부터 다시 시도해주세요.\");\n      setIsLoading(false);\n      // 검증 실패 시 5초 후 홈으로 리다이렉트\n      setTimeout(() => {\n        navigate(\"/complete\"); // 상태 전달\n      }, 3000); // 3000ms = 3초\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: `${window.location.origin}/complete`\n      }\n    });\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n    setIsLoading(false);\n  };\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dpmCheckerLink && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"payment-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(PaymentElement, {\n          id: \"payment-element\",\n          options: paymentElementOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isLoading || !stripe || !elements || !orderId,\n          id: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"button-text\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\",\n              id: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 26\n            }, this) : \"Pay now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"payment-message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dpm-annotation\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Payment methods are dynamically displayed based on customer location, order amount, and currency.\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: dpmCheckerLink,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            id: \"dpm-integration-checker\",\n            children: \"Preview payment methods by transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(CheckoutForm, \"umMg6+33hSH5S2pbPJct7tMiTQY=\", false, function () {\n  return [useStripe, useElements, useNavigate, usePerformance];\n});\n_c = CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","PaymentElement","useStripe","useElements","usePerformance","jsxDEV","_jsxDEV","Fragment","_Fragment","CheckoutForm","dpmCheckerLink","_s","stripe","elements","message","setMessage","isLoading","setIsLoading","navigate","performanceId","orderId","config","headers","verifyOrder","console","log","response","post","status","error","handleSubmit","e","preventDefault","isValid","setTimeout","confirmPayment","confirmParams","return_url","window","location","origin","type","paymentElementOptions","layout","children","id","onSubmit","options","fileName","_jsxFileName","lineNumber","columnNumber","disabled","className","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/hwarye/Documents/coding/sparta/final-project/project/stripe-front/src/CheckoutForm.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // useNavigate 임포트\nimport axios from \"axios\";\nimport {\n  PaymentElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\nimport { usePerformance } from \"./PerformanceContext\"; // PerformanceProvider\n\nexport default function CheckoutForm({dpmCheckerLink}) {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate(); // useNavigate 훅 사용\n  const { performanceId, orderId } = usePerformance(); // PerformanceContext에서 값 가져오기\n  \n  const config = {\n    headers: {\n      \"Access-Control-Allow-Headers\" : \"Content-Type\",\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Methods\": \"OPTIONS,POST\" // 필요한 경우 인증 토큰\n    }\n  };\n  //서버로 주문 검증 요청을 보내는 함수\n  const verifyOrder = async () => {\n    try {\n      console.log(\"검증 요청 \" + performanceId)\n      const response = await axios.post\n          //(`http://3.36.73.221:10020/api/v1/payments/verify-ttl/${orderId}`, config\n          //(`http://localhost:8080/api/v1/payments/verify-ttl/${orderId}`\n          (`https://1741-122-203-225-229.ngrok-free.app/api/v1/payments/verify-ttl/${orderId}?performanceId=${performanceId}` )\n      console.log(response.status);\n      return true;\n    } catch (error) {\n      console.error(\"서버 검증 중 오류 발생:\", error);\n      return false;\n    }\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    // 주문 검증 실행\n    const isValid = await verifyOrder();\n    if (!isValid) {\n      setMessage(\"주문 검증 실패: ttl이 만료되었습니다. 처음부터 다시 시도해주세요.\");\n      setIsLoading(false);\n      // 검증 실패 시 5초 후 홈으로 리다이렉트\n      setTimeout(() => {\n        navigate(\"/complete\"); // 상태 전달\n      }, 3000); // 3000ms = 3초\n      return;\n    }\n    setIsLoading(true);\n    const { error } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: `${window.location.origin}/complete`,\n      },\n    });\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n    setIsLoading(false);\n  };\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  }\n  return (\n      <>\n        {dpmCheckerLink &&\n            <>\n              <form id=\"payment-form\" onSubmit={handleSubmit}>\n                <PaymentElement id=\"payment-element\" options={paymentElementOptions}/>\n                <button disabled={isLoading || !stripe || !elements || !orderId} id=\"submit\">\n          <span id=\"button-text\">\n            {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\n          </span>\n                </button>\n                {/* Show any error or success messages */}\n                {message && <div id=\"payment-message\">{message}</div>}\n              </form>\n              {/* [DEV]: Display dynamic payment methods annotation and integration checker */}\n              <div id=\"dpm-annotation\">\n                <p>\n                  Payment methods are dynamically displayed based on customer location, order amount, and currency.&nbsp;\n                  <a href={dpmCheckerLink} target=\"_blank\" rel=\"noopener noreferrer\" id=\"dpm-integration-checker\">Preview\n                    payment methods by transaction</a>\n                </p>\n              </div>\n            </>\n        }\n      </>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,cAAc,EACdC,SAAS,EACTC,WAAW,QACN,yBAAyB;AAChC,SAASC,cAAc,QAAQ,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvD,eAAe,SAASC,YAAYA,CAAC;EAACC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAMC,MAAM,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMoB,QAAQ,GAAGnB,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM;IAAEoB,aAAa;IAAEC;EAAQ,CAAC,GAAGhB,cAAc,CAAC,CAAC,CAAC,CAAC;;EAErD,MAAMiB,MAAM,GAAG;IACbC,OAAO,EAAE;MACP,8BAA8B,EAAG,cAAc;MAC/C,cAAc,EAAE,kBAAkB;MAClC,8BAA8B,EAAE,cAAc,CAAC;IACjD;EACF,CAAC;EACD;EACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGN,aAAa,CAAC;MACrC,MAAMO,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B;MACzB;MACA;MAAA,CACC,0EAA0EP,OAAO,kBAAkBD,aAAa,EAAG,CAAC;MACzHK,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACE,MAAM,CAAC;MAC5B,OAAO,IAAI;IACb,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,OAAO,KAAK;IACd;EACF,CAAC;EACD,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACpB,MAAM,IAAI,CAACC,QAAQ,EAAE;MACxB;MACA;MACA;IACF;IACA;IACA,MAAMoB,OAAO,GAAG,MAAMV,WAAW,CAAC,CAAC;IACnC,IAAI,CAACU,OAAO,EAAE;MACZlB,UAAU,CAAC,yCAAyC,CAAC;MACrDE,YAAY,CAAC,KAAK,CAAC;MACnB;MACAiB,UAAU,CAAC,MAAM;QACfhB,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;MACzB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACV;IACF;IACAD,YAAY,CAAC,IAAI,CAAC;IAClB,MAAM;MAAEY;IAAM,CAAC,GAAG,MAAMjB,MAAM,CAACuB,cAAc,CAAC;MAC5CtB,QAAQ;MACRuB,aAAa,EAAE;QACb;QACAC,UAAU,EAAE,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM;MACvC;IACF,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;IACA,IAAIX,KAAK,CAACY,IAAI,KAAK,YAAY,IAAIZ,KAAK,CAACY,IAAI,KAAK,kBAAkB,EAAE;MACpE1B,UAAU,CAACc,KAAK,CAACf,OAAO,CAAC;IAC3B,CAAC,MAAM;MACLC,UAAU,CAAC,+BAA+B,CAAC;IAC7C;IACAE,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EACD,MAAMyB,qBAAqB,GAAG;IAC5BC,MAAM,EAAE;EACV,CAAC;EACD,oBACIrC,OAAA,CAAAE,SAAA;IAAAoC,QAAA,EACGlC,cAAc,iBACXJ,OAAA,CAAAE,SAAA;MAAAoC,QAAA,gBACEtC,OAAA;QAAMuC,EAAE,EAAC,cAAc;QAACC,QAAQ,EAAEhB,YAAa;QAAAc,QAAA,gBAC7CtC,OAAA,CAACL,cAAc;UAAC4C,EAAE,EAAC,iBAAiB;UAACE,OAAO,EAAEL;QAAsB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACtE7C,OAAA;UAAQ8C,QAAQ,EAAEpC,SAAS,IAAI,CAACJ,MAAM,IAAI,CAACC,QAAQ,IAAI,CAACO,OAAQ;UAACyB,EAAE,EAAC,QAAQ;UAAAD,QAAA,eAClFtC,OAAA;YAAMuC,EAAE,EAAC,aAAa;YAAAD,QAAA,EACnB5B,SAAS,gBAAGV,OAAA;cAAK+C,SAAS,EAAC,SAAS;cAACR,EAAE,EAAC;YAAS;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,GAAG;UAAS;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC,EAERrC,OAAO,iBAAIR,OAAA;UAAKuC,EAAE,EAAC,iBAAiB;UAAAD,QAAA,EAAE9B;QAAO;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eAEP7C,OAAA;QAAKuC,EAAE,EAAC,gBAAgB;QAAAD,QAAA,eACtBtC,OAAA;UAAAsC,QAAA,GAAG,uGAED,eAAAtC,OAAA;YAAGgD,IAAI,EAAE5C,cAAe;YAAC6C,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,qBAAqB;YAACX,EAAE,EAAC,yBAAyB;YAAAD,QAAA,EAAC;UAChE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA,eACN;EAAC,gBAEP,CAAC;AAET;AAACxC,EAAA,CAjGuBF,YAAY;EAAA,QACnBP,SAAS,EACPC,WAAW,EAGXJ,WAAW,EACOK,cAAc;AAAA;AAAAqD,EAAA,GAN3BhD,YAAY;AAAA,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}