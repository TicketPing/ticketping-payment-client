{"ast":null,"code":"var _jsxFileName = \"/Users/hwarye/Documents/coding/sparta/final-project/project/stripe-front/src/CheckoutForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PaymentElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CheckoutForm({\n  dpmCheckerLink\n}) {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const navigate = useNavigate();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  debugger;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error,\n      paymentIntent\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: \"http://localhost:3000/complete\"\n      }\n    });\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error) {\n      if (error.type === \"card_error\" || error.type === \"validation_error\") {\n        setMessage(error.message);\n      } else {\n        setMessage(\"An unexpected error occurred.\");\n      }\n      setIsLoading(false);\n    } else if (paymentIntent && paymentIntent.status === \"succeeded\") {\n      navigate(\"/complete\");\n    }\n    setIsLoading(false);\n  };\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"payment-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(PaymentElement, {\n        id: \"payment-element\",\n        options: paymentElementOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isLoading || !stripe || !elements,\n        id: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"button-text\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\",\n            id: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 26\n          }, this) : \"Pay now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"payment-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dpm-annotation\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Payment methods are dynamically displayed based on customer location, order amount, and currency.\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: dpmCheckerLink,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          id: \"dpm-integration-checker\",\n          children: \"Preview payment methods by transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CheckoutForm, \"LvaiBr0aUgE8jTc4M7Ccx7oZuKE=\", false, function () {\n  return [useStripe, useElements, useNavigate];\n});\n_c = CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useState","useNavigate","PaymentElement","useStripe","useElements","jsxDEV","_jsxDEV","Fragment","_Fragment","CheckoutForm","dpmCheckerLink","_s","stripe","elements","navigate","message","setMessage","isLoading","setIsLoading","handleSubmit","e","preventDefault","error","paymentIntent","confirmPayment","confirmParams","return_url","type","status","paymentElementOptions","layout","children","id","onSubmit","options","fileName","_jsxFileName","lineNumber","columnNumber","disabled","className","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/hwarye/Documents/coding/sparta/final-project/project/stripe-front/src/CheckoutForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport {\n  PaymentElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\n\nexport default function CheckoutForm({dpmCheckerLink}) {\n  const stripe = useStripe();\n  const elements = useElements();\n  const navigate = useNavigate();\n\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  debugger\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    setIsLoading(true);\n\n    const {error, paymentIntent} = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: \"http://localhost:3000/complete\",\n      },\n    });\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error) {\n      if (error.type === \"card_error\" || error.type === \"validation_error\") {\n        setMessage(error.message);\n      } else {\n        setMessage(\"An unexpected error occurred.\");\n      }\n\n      setIsLoading(false);\n    } else if (paymentIntent && paymentIntent.status === \"succeeded\") {\n      navigate(\"/complete\");\n    }\n    setIsLoading(false);\n  }\n\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  }\n\n  return (\n    <>\n      <form id=\"payment-form\" onSubmit={handleSubmit}>\n\n        <PaymentElement id=\"payment-element\" options={paymentElementOptions} />\n        <button disabled={isLoading || !stripe || !elements} id=\"submit\">\n          <span id=\"button-text\">\n            {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\n          </span>\n        </button>\n        {/* Show any error or success messages */}\n        {message && <div id=\"payment-message\">{message}</div>}\n      </form>\n      {/* [DEV]: Display dynamic payment methods annotation and integration checker */}\n      <div id=\"dpm-annotation\">\n        <p>\n          Payment methods are dynamically displayed based on customer location, order amount, and currency.&nbsp;\n          <a href={dpmCheckerLink} target=\"_blank\" rel=\"noopener noreferrer\" id=\"dpm-integration-checker\">Preview payment methods by transaction</a>\n        </p>\n      </div>\n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}