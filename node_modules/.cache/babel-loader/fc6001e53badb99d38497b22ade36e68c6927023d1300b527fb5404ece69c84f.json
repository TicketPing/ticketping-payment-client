{"ast":null,"code":"var _jsxFileName = \"/Users/hwarye/Documents/coding/sparta/final-project/project/stripe-front/src/CheckoutForm.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // useNavigate 임포트\n\nimport { PaymentElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CheckoutForm({\n  dpmCheckerLink,\n  orderId\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  //서버로 주문 검증 요청을 보내는 함수\n  const verifyOrder = () => {\n    try {\n      const response = fetch(`http://localhost:8080/api/v1/payments/verify-ttl/${orderId}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      // 응답이 200 OK인 경우 검증 성공으로 처리\n      if (response.ok) {\n        return true;\n      } else {\n        console.error(`서버 응답 오류: ${response.status}`);\n        return false;\n      }\n    } catch (error) {\n      console.error(\"서버 검증 중 오류 발생:\", error);\n      return false;\n    }\n  };\n  const handleSubmit = async e => {\n    _s();\n    e.preventDefault();\n    const navigate = useNavigate(); // useNavigate 훅 사용\n\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // 주문 검증 실행\n    const isValid = await verifyOrder();\n    if (!isValid) {\n      setMessage(\"주문 검증 실패: ttl이 만료되었습니다. 처음부터 다시 시도해주세요.\");\n      setIsLoading(false);\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: `${window.location.origin}/complete`\n      }\n    });\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n    setIsLoading(false);\n  };\n  _s(handleSubmit, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dpmCheckerLink && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"payment-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(PaymentElement, {\n          id: \"payment-element\",\n          options: paymentElementOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isLoading || !stripe || !elements || !orderId,\n          id: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"button-text\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\",\n              id: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 26\n            }, this) : \"Pay now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"payment-message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dpm-annotation\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Payment methods are dynamically displayed based on customer location, order amount, and currency.\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: dpmCheckerLink,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            id: \"dpm-integration-checker\",\n            children: \"Preview payment methods by transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s2(CheckoutForm, \"dCp8GD2PngabXglFzb6wYe55PBM=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","PaymentElement","useStripe","useElements","jsxDEV","_jsxDEV","Fragment","_Fragment","CheckoutForm","dpmCheckerLink","orderId","_s2","_s","$RefreshSig$","stripe","elements","message","setMessage","isLoading","setIsLoading","verifyOrder","response","fetch","method","headers","ok","console","error","status","handleSubmit","e","preventDefault","navigate","isValid","confirmPayment","confirmParams","return_url","window","location","origin","type","paymentElementOptions","layout","children","id","onSubmit","options","fileName","_jsxFileName","lineNumber","columnNumber","disabled","className","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/hwarye/Documents/coding/sparta/final-project/project/stripe-front/src/CheckoutForm.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // useNavigate 임포트\n\nimport {\n  PaymentElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\n\nexport default function CheckoutForm({dpmCheckerLink, orderId}) {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  //서버로 주문 검증 요청을 보내는 함수\n  const verifyOrder =  () => {\n    try {\n      const response = fetch(`http://localhost:8080/api/v1/payments/verify-ttl/${orderId}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      // 응답이 200 OK인 경우 검증 성공으로 처리\n      if (response.ok) {\n        return true;\n      } else {\n        console.error(`서버 응답 오류: ${response.status}`);\n        return false;\n      }\n\n    } catch (error) {\n      console.error(\"서버 검증 중 오류 발생:\", error);\n      return false;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const navigate = useNavigate(); // useNavigate 훅 사용\n\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // 주문 검증 실행\n    const isValid = await verifyOrder();\n    if (!isValid) {\n      setMessage(\"주문 검증 실패: ttl이 만료되었습니다. 처음부터 다시 시도해주세요.\");\n      setIsLoading(false);\n      return;\n    }\n\n    setIsLoading(true);\n\n    const { error } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: `${window.location.origin}/complete`,\n      },\n    });\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n\n    setIsLoading(false);\n  };\n\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  }\n\n  return (\n    <>\n      {dpmCheckerLink &&\n          <>\n\n            <form id=\"payment-form\" onSubmit={handleSubmit}>\n              <PaymentElement id=\"payment-element\" options={paymentElementOptions}/>\n              <button disabled={isLoading || !stripe || !elements || !orderId} id=\"submit\">\n          <span id=\"button-text\">\n            {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\n          </span>\n              </button>\n              {/* Show any error or success messages */}\n              {message && <div id=\"payment-message\">{message}</div>}\n            </form>\n            {/* [DEV]: Display dynamic payment methods annotation and integration checker */}\n            <div id=\"dpm-annotation\">\n              <p>\n                Payment methods are dynamically displayed based on customer location, order amount, and currency.&nbsp;\n                <a href={dpmCheckerLink} target=\"_blank\" rel=\"noopener noreferrer\" id=\"dpm-integration-checker\">Preview\n                  payment methods by transaction</a>\n              </p>\n            </div>\n          </>\n      }\n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}