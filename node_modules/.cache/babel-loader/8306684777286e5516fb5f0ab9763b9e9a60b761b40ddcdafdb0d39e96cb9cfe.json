{"ast":null,"code":"import React,{useContext,useState}from\"react\";import{useNavigate}from\"react-router-dom\";// useNavigate 임포트\nimport PerformanceContext from\"./PerformanceContext\";import{PaymentElement,useStripe,useElements}from\"@stripe/react-stripe-js\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function CheckoutForm(_ref){let{dpmCheckerLink,performanceId,orderId}=_ref;const stripe=useStripe();const elements=useElements();const[message,setMessage]=useState(null);const[isLoading,setIsLoading]=useState(false);const{token}=useContext(PerformanceContext);const navigate=useNavigate();// useNavigate 훅 사용\n//서버로 주문 검증 요청을 보내는 함수\nconst verifyOrder=async()=>{try{console.log(\"검증 요청 \"+performanceId);const response=await fetch(`http://3.35.217.241:10020/api/v1/payments/verify-ttl/${orderId}?performanceId=${performanceId}`,{method:\"POST\",mode:'no-cors',headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \"+token}});if(!response.ok){throw new Error(\"서버 응답이 올바르지 않습니다.\");}console.log(response.status);return true;}catch(error){console.error(\"서버 검증 중 오류 발생:\",error);return false;}};const handleSubmit=async e=>{e.preventDefault();if(!stripe||!elements){// Stripe.js hasn't yet loaded.\n// Make sure to disable form submission until Stripe.js has loaded.\nreturn;}// 주문 검증 실행\nconst isValid=await verifyOrder();if(!isValid){setMessage(\"주문 검증 실패: ttl이 만료되었습니다. 처음부터 다시 시도해주세요.\");setIsLoading(false);// 검증 실패 시 5초 후 홈으로 리다이렉트\nsetTimeout(()=>{navigate(\"/complete\");// 상태 전달\n},3000);// 3000ms = 3초\nreturn;}setIsLoading(true);const{error}=await stripe.confirmPayment({elements,confirmParams:{// Make sure to change this to your payment completion page\nreturn_url:`${window.location.origin}/complete`}});// This point will only be reached if there is an immediate error when\n// confirming the payment. Otherwise, your customer will be redirected to\n// your `return_url`. For some payment methods like iDEAL, your customer will\n// be redirected to an intermediate site first to authorize the payment, then\n// redirected to the `return_url`.\nif(error.type===\"card_error\"||error.type===\"validation_error\"){setMessage(error.message);}else{setMessage(\"An unexpected error occurred.\");}setIsLoading(false);};const paymentElementOptions={layout:\"tabs\"};return/*#__PURE__*/_jsx(_Fragment,{children:dpmCheckerLink&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"form\",{id:\"payment-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(PaymentElement,{id:\"payment-element\",options:paymentElementOptions}),/*#__PURE__*/_jsx(\"button\",{disabled:isLoading||!stripe||!elements||!orderId,id:\"submit\",children:/*#__PURE__*/_jsx(\"span\",{id:\"button-text\",children:isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"spinner\",id:\"spinner\"}):\"Pay now\"})}),message&&/*#__PURE__*/_jsx(\"div\",{id:\"payment-message\",children:message})]}),/*#__PURE__*/_jsx(\"div\",{id:\"dpm-annotation\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Payment methods are dynamically displayed based on customer location, order amount, and currency.\\xA0\",/*#__PURE__*/_jsx(\"a\",{href:dpmCheckerLink,target:\"_blank\",rel:\"noopener noreferrer\",id:\"dpm-integration-checker\",children:\"Preview payment methods by transaction\"})]})})]})});}","map":{"version":3,"names":["React","useContext","useState","useNavigate","PerformanceContext","PaymentElement","useStripe","useElements","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CheckoutForm","_ref","dpmCheckerLink","performanceId","orderId","stripe","elements","message","setMessage","isLoading","setIsLoading","token","navigate","verifyOrder","console","log","response","fetch","method","mode","headers","ok","Error","status","error","handleSubmit","e","preventDefault","isValid","setTimeout","confirmPayment","confirmParams","return_url","window","location","origin","type","paymentElementOptions","layout","children","id","onSubmit","options","disabled","className","href","target","rel"],"sources":["/Users/hwarye/Documents/coding/sparta/final-project/project/stripe-front/src/CheckoutForm.jsx"],"sourcesContent":["import React, {useContext, useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // useNavigate 임포트\nimport PerformanceContext from \"./PerformanceContext\";\nimport {\n  PaymentElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\nexport default function CheckoutForm({dpmCheckerLink, performanceId, orderId}) {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { token } = useContext(PerformanceContext);\n  const navigate = useNavigate(); // useNavigate 훅 사용\n\n  //서버로 주문 검증 요청을 보내는 함수\n  const verifyOrder = async () => {\n    try {\n      console.log(\"검증 요청 \" + performanceId)\n      const response = await fetch(`http://3.35.217.241:10020/api/v1/payments/verify-ttl/${orderId}?performanceId=${performanceId}`, {\n        method: \"POST\",\n        mode: 'no-cors',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\" : \"Bearer \" + token\n        },\n      });\n      if (!response.ok) {\n        throw new Error(\"서버 응답이 올바르지 않습니다.\");\n      }\n      console.log(response.status);\n      return true;\n    } catch (error) {\n      console.error(\"서버 검증 중 오류 발생:\", error);\n      return false;\n    }\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    // 주문 검증 실행\n    const isValid = await verifyOrder();\n    if (!isValid) {\n      setMessage(\"주문 검증 실패: ttl이 만료되었습니다. 처음부터 다시 시도해주세요.\");\n      setIsLoading(false);\n      // 검증 실패 시 5초 후 홈으로 리다이렉트\n      setTimeout(() => {\n        navigate(\"/complete\"); // 상태 전달\n      }, 3000); // 3000ms = 3초\n      return;\n    }\n    setIsLoading(true);\n    const { error } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: `${window.location.origin}/complete`,\n      },\n    });\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n    setIsLoading(false);\n  };\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  }\n  return (\n      <>\n        {dpmCheckerLink &&\n            <>\n              <form id=\"payment-form\" onSubmit={handleSubmit}>\n                <PaymentElement id=\"payment-element\" options={paymentElementOptions}/>\n                <button disabled={isLoading || !stripe || !elements || !orderId} id=\"submit\">\n          <span id=\"button-text\">\n            {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\n          </span>\n                </button>\n                {/* Show any error or success messages */}\n                {message && <div id=\"payment-message\">{message}</div>}\n              </form>\n              {/* [DEV]: Display dynamic payment methods annotation and integration checker */}\n              <div id=\"dpm-annotation\">\n                <p>\n                  Payment methods are dynamically displayed based on customer location, order amount, and currency.&nbsp;\n                  <a href={dpmCheckerLink} target=\"_blank\" rel=\"noopener noreferrer\" id=\"dpm-integration-checker\">Preview\n                    payment methods by transaction</a>\n                </p>\n              </div>\n            </>\n        }\n      </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}